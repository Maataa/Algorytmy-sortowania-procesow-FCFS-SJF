from numpy import random
# with open("C:/Users/Marcel/PycharmProjects/pythonProject/bursttime10.txt") as f:
#     bursts = [int(x) for x in f.read().split(",")]
# with open("C:/Users/Marcel/PycharmProjects/pythonProject/arrivaltime10.txt") as f:
#     arrivals = [int(x) for x in f.read().split(",")]
# n=10

# with open("C:/Users/Marcel/PycharmProjects/pythonProject/bursttime100.txt") as f:
#     bursts = [int(x) for x in f.read().split(",")]
# with open("C:/Users/Marcel/PycharmProjects/pythonProject/arrivaltime100.txt") as f:
#     arrivals = [int(x) for x in f.read().split(",")]
# n=100

# with open("C:/Users/Marcel/PycharmProjects/pythonProject/bursttime1000.txt") as f:
#     bursts = [int(x) for x in f.read().split(",")]
# with open("C:/Users/Marcel/PycharmProjects/pythonProject/arrivaltime1000.txt") as f:
#     arrivals = [int(x) for x in f.read().split(",")]
# n=1000

n=1000                                  #liczba procesow
arrivals=random.randint(20, size=(n)) #od 0 do 20
bursts=random.randint(1,20, size=(n)) #od 1 do 20

finish_time=[0]*n
turnaround_time=[]
waiting_time=[]

def average(arr):           #funkcja liczaca srednia
    sum = 0
    for item in arr:
        sum+=item
    return sum/len(arr)

for i in range (0, n):
    for j in range (0, n-i-1):
        if bursts[j]>bursts[j+1]:
            arrivals[j], arrivals[j+1] = arrivals[j+1], arrivals[j]
            bursts[j], bursts[j+1] = bursts[j+1], bursts[j]
for i in range (0, n):
    for j in range (0, n-i-1):
        if bursts[j]==bursts[j+1]:
            if arrivals[j]>arrivals[j+1]:
                arrivals[j], arrivals[j+1] = arrivals[j+1], arrivals[j]
                bursts[j], bursts[j+1] = bursts[j+1], bursts[j]

minimum=arrivals[0]
for i in range (0, n):
    if minimum>arrivals[i]: #szukamy najmniejszego arrival time, zeby zobaczyc ktory proces zaczyna
        minimum=arrivals[i] #znajdujemy minimum czasu przybycia
        min_slot=i    #ustawiamy zmienna na miejsce, w ktorym jest proces, ktory przybyl pierwszy
    else: min_slot=0
var=minimum           #najmniejszy arrival time
finish_time[min_slot]=var+bursts[min_slot] #finish time pierwszego procesu to najmniejszy arrival+jego burst
var=finish_time[min_slot]  #pierwszy finish time

for i in range(0, n):
    if arrivals[i]!=minimum:
        finish_time[i]=bursts[i]+var    #czas zak. procesu to burst+czas zak. poprzedniego
        var=finish_time[i]

for i in range (0, n):
    for j in range (0, n-i-1):
        if finish_time[j]>finish_time[j+1]: #sortowanie po czasach zakonczenia
            arrivals[j], arrivals[j+1] = arrivals[j+1], arrivals[j]
            bursts[j], bursts[j+1] = bursts[j+1], bursts[j]
            finish_time[j], finish_time[j + 1] = finish_time[j + 1], finish_time[j]


for i in range(0, n): #wyliczanie turn around time i waiting time
    turnaround_time.append(finish_time[i]-arrivals[i])
    waiting_time.append(turnaround_time[i]-bursts[i])
    if turnaround_time[i]<0:
        turnaround_time[i]=0
    if waiting_time[i]<0:
        waiting_time[i]=0


print()  #wyswietlanie wynikow
print("Process ID ", " Arrival Time ", "  Burst Time ", " Finish Time ", " Turn Around Time ", " Waiting time ")
print(str(1) + "\t\t\t " + str(arrivals[0]) + "\t\t\t\t " + str(bursts[0]) + "\t\t\t  " + str(finish_time[0]) + "\t\t\t    " + str(turnaround_time[0]) + " \t\t\t\t   " + str(waiting_time[0]))
for i in range (1, n):
    print(str(i+1)+"\t\t\t "+str(arrivals[i])+"\t\t\t\t "+str(bursts[i])+"\t\t\t  "+str(finish_time[i])+"\t\t\t"+str(turnaround_time[i])+" \t\t\t\t   "+str(waiting_time[i]))
    average_turnaround_time=average(turnaround_time)
    average_waiting_time=average(waiting_time)
print("average waiting time ", average_waiting_time)
print("average turnaround time ", average_turnaround_time)
print("time passed:", finish_time[-1],"of clock units")